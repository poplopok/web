{"ast":null,"code":"import axios from 'axios';\nimport { encode as base64_encode } from 'base-64';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const REGISTER = 'REGISTER';\nexport const SET_LOGIN = 'SET_LOGIN';\nexport const SET_PASSWORD = 'SET_PASSWORD';\nexport const SET_ANSWER = 'SET_ANSWER';\nexport const SET_SIGN_IN = \"SET_SIGN_IN\";\nexport function setLogin(login) {\n  return {\n    type: SET_LOGIN,\n    payload: login\n  };\n}\nexport function setPassword(password) {\n  return {\n    type: SET_PASSWORD,\n    payload: password\n  };\n}\nexport function setAnswer(answer) {\n  return {\n    type: SET_ANSWER,\n    payload: answer\n  };\n}\nexport function registration(user, event) {\n  event.preventDefault(event);\n  let bodyFormData = new FormData();\n  bodyFormData.append('username', user.login);\n  bodyFormData.append('password', user.password);\n  return dispatch => {\n    axios({\n      method: \"post\",\n      url: 'http://localhost:8585/register',\n      data: bodyFormData,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      if (result.data) {\n        dispatch({\n          type: SET_ANSWER,\n          payload: \"Вы успешно зарегистрировались\"\n        });\n        dispatch({\n          type: SET_SIGN_IN,\n          payload: true\n        });\n        dispatch({\n          type: SET_LOGIN,\n          payload: ''\n        });\n        dispatch({\n          type: SET_PASSWORD,\n          payload: ''\n        });\n      }\n    }).catch(error => {\n      let answer = error.message;\n      dispatch({\n        type: SET_ANSWER,\n        payload: answer\n      });\n    });\n  };\n}\nexport function login(user, event) {\n  event.preventDefault(event);\n  let bodyFormData = new FormData();\n  bodyFormData.append('username', user.login);\n  bodyFormData.append('password', user.password);\n  return dispatch => {\n    axios({\n      method: \"post\",\n      url: 'http://localhost:8585/login',\n      data: bodyFormData,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      if (result.data) {\n        localStorage.setItem(\"user\", \"Bearer \" + result.data);\n        dispatch({\n          type: SET_ANSWER,\n          payload: \"Вы успешно зарегистрировались\"\n        });\n        dispatch({\n          type: SET_SIGN_IN,\n          payload: true\n        });\n        window.location = '/main';\n      } else {\n        dispatch({\n          type: SET_ANSWER,\n          payload: 'Введен неправильный пароль или логин'\n        });\n      }\n    }).catch(error => {\n      let status = error.response ? error.response.status : null;\n      let answer = 'Error';\n      if (status === 415 || status === 400) answer = 'Ошибка';\n      if (status === 401) {\n        answer = 'Вы не прошли аутентификацию';\n        localStorage.removeItem(\"user\");\n      }\n      if (status === 404) answer = 'Потеряно соединение';\n      dispatch({\n        type: SET_ANSWER,\n        payload: answer\n      });\n    });\n  };\n}\nexport function authorization() {\n  return dispatch => {\n    axios({\n      method: \"get\",\n      url: 'http://localhost:8585/authorization',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem(\"user\")\n      }\n    }).then(result => {\n      if (result.data) {\n        if (result.data === \"Successful\") dispatch({\n          type: SET_SIGN_IN,\n          payload: true\n        });\n      } else {\n        dispatch({\n          type: SET_SIGN_IN,\n          payload: false\n        });\n      }\n    }).catch(error => {\n      let status = error.response ? error.response.status : null;\n      let answer = 'Error';\n      if (status === 415 || status === 400) answer = 'Ошибка';\n      if (status === 401) {\n        answer = 'Вы не прошли аутентификацию';\n        localStorage.removeItem(\"user\");\n      }\n      if (status === 404) answer = 'Потеряно соединение';\n      dispatch({\n        type: SET_ANSWER,\n        payload: answer\n      });\n      dispatch({\n        type: SET_SIGN_IN,\n        payload: false\n      });\n    });\n  };\n}\nexport function signIn(isLogin) {\n  return {\n    type: SET_SIGN_IN,\n    payload: isLogin\n  };\n}","map":{"version":3,"names":["axios","encode","base64_encode","LOGIN","LOGOUT","REGISTER","SET_LOGIN","SET_PASSWORD","SET_ANSWER","SET_SIGN_IN","setLogin","login","type","payload","setPassword","password","setAnswer","answer","registration","user","event","preventDefault","bodyFormData","FormData","append","dispatch","method","url","data","headers","then","result","catch","error","message","localStorage","setItem","window","location","status","response","removeItem","authorization","getItem","signIn","isLogin"],"sources":["/Users/igorsmirnov/Downloads/webchiik/front/src/actions/userAction.js"],"sourcesContent":["import axios from 'axios';\nimport {encode as base64_encode} from 'base-64'\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const REGISTER = 'REGISTER';\nexport const SET_LOGIN = 'SET_LOGIN';\nexport const SET_PASSWORD = 'SET_PASSWORD';\nexport const SET_ANSWER = 'SET_ANSWER';\nexport const SET_SIGN_IN = \"SET_SIGN_IN\";\n\n\nexport function setLogin(login) {\n    return {\n        type: SET_LOGIN,\n        payload: login\n    }\n}\n\nexport function setPassword(password) {\n    return {\n        type: SET_PASSWORD,\n        payload: password\n    }\n}\n\nexport function setAnswer(answer) {\n    return {\n        type: SET_ANSWER,\n        payload: answer\n    }\n}\n\nexport function registration(user, event) {\n    event.preventDefault(event);\n    let bodyFormData = new FormData();\n    bodyFormData.append('username', user.login);\n    bodyFormData.append('password', user.password);\n    return dispatch => {\n        axios({\n            method: \"post\",\n            url: 'http://localhost:8585/register',\n            data: bodyFormData,\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(result => {\n                if (result.data) {\n                    dispatch({\n                        type: SET_ANSWER,\n                        payload: \"Вы успешно зарегистрировались\"\n                    });\n                    dispatch({\n                        type: SET_SIGN_IN,\n                        payload: true\n                    })\n                    dispatch({\n                        type: SET_LOGIN,\n                        payload: '',\n\n                    });\n                    dispatch({\n                        type: SET_PASSWORD,\n                        payload: '',\n                    });\n                }\n            })\n            .catch(error => {\n                let answer = error.message\n                dispatch({\n                    type: SET_ANSWER,\n                    payload: answer,\n                });\n            });\n\n    }\n}\nexport function login(user, event) {\n    event.preventDefault(event);\n    let bodyFormData = new FormData();\n    bodyFormData.append('username', user.login);\n    bodyFormData.append('password', user.password);\n    return dispatch => {\n        axios({\n            method: \"post\",\n            url: 'http://localhost:8585/login',\n            data: bodyFormData,\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(result => {\n\n                if (result.data) {\n                    localStorage.setItem(\"user\", \"Bearer \" + result.data);\n                    dispatch({\n                        type: SET_ANSWER,\n                        payload: \"Вы успешно зарегистрировались\"\n                    });\n                    dispatch({\n                        type: SET_SIGN_IN,\n                        payload: true,\n                    })\n                    window.location = '/main';\n                } else {\n                    dispatch({\n                        type: SET_ANSWER,\n                        payload: 'Введен неправильный пароль или логин',\n                    });\n                }\n            })\n            .catch(error => {\n                let status = error.response ? error.response.status : null;\n                let answer = 'Error';\n                if (status === 415 || status === 400) answer = 'Ошибка';\n                if (status === 401) {\n                    answer = 'Вы не прошли аутентификацию';\n                    localStorage.removeItem(\"user\");\n                }\n                if (status === 404) answer = 'Потеряно соединение';\n                dispatch({\n                    type: SET_ANSWER,\n                    payload: answer,\n                });\n            });\n    };\n}\nexport function authorization() {\n\n    return dispatch => {\n        axios({\n            method: \"get\",\n            url: 'http://localhost:8585/authorization',\n            headers: { 'Content-Type': 'application/json',\n            'Authorization' : localStorage.getItem(\"user\")},\n        })\n            .then(result => {\n\n                if (result.data) {\n                    if (result.data === \"Successful\")\n                        dispatch({\n                            type: SET_SIGN_IN,\n                            payload: true,\n                        })\n                }\n                else {\n                    dispatch({\n                        type: SET_SIGN_IN,\n                        payload: false,\n\n                    })\n                }\n            })\n            .catch(error => {\n                let status = error.response ? error.response.status : null;\n                let answer = 'Error';\n                if (status === 415 || status === 400) answer = 'Ошибка';\n                if (status === 401) {\n                    answer = 'Вы не прошли аутентификацию';\n                    localStorage.removeItem(\"user\");\n                }\n                if (status === 404) answer = 'Потеряно соединение';\n                dispatch({\n                    type: SET_ANSWER,\n                    payload: answer,\n                });\n                dispatch({\n                    type: SET_SIGN_IN,\n                    payload: false,\n                })\n            });\n    };\n}\nexport function signIn(isLogin) {\n   return{\n       type: SET_SIGN_IN,\n       payload: isLogin\n   }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}