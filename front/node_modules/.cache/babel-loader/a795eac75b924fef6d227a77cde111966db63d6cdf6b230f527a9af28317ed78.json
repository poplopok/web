{"ast":null,"code":"var _jsxFileName = \"/Users/igorsmirnov/Downloads/lab4Web/front/src/pages/ChooseForm.jsx\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setAnswer } from \"../actions/userAction\";\nimport { sendPoint, setR, setX, setY } from \"../actions/coordinatesAction\";\nimport \"../screen/chooseForm.css\";\nimport FormErrors from \"./FornErrors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ChooseForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCheckboxChange = (value, type) => {\n      const updatedValues = {\n        ...this.state[type]\n      };\n      Object.keys(updatedValues).forEach(key => {\n        updatedValues[key] = key === value;\n      });\n      this.setState({\n        [type]: updatedValues\n      });\n      if (type === 'X') {\n        this.props.setX(value);\n        this.validateField('paramX', value);\n      } else {\n        this.props.setR(value);\n        this.validateField('paramR', value);\n      }\n    };\n    this.handleYChange = event => {\n      this.setState({\n        Y: event.target.value\n      });\n      this.props.setY(event.target.value);\n      this.validateField('paramY', event.target.value);\n    };\n    this.paramsIsReady = e => {\n      let errors = this.state.formErrors;\n      if (!this.state.formValid) {\n        errors.all = 'Неправильно введенные поля';\n        e.preventDefault();\n      } else {\n        errors.all = '';\n        this.onSubmit(e);\n      }\n    };\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        X,\n        Y,\n        R\n      } = this.state;\n\n      // Find the selected X value\n      const selectedX = Object.keys(X).find(key => X[key]);\n\n      // Find the selected R value\n      const selectedR = Object.keys(R).find(key => R[key]);\n\n      // Ensure both X and R are selected, and Y is not empty\n      if (selectedX !== undefined && selectedR !== undefined && Y !== '') {\n        this.props.sendPoint({\n          x: selectedX,\n          y: Y,\n          r: selectedR\n        });\n      }\n    };\n    this.state = {\n      X: {\n        '-5': false,\n        '-4': false,\n        '-3': false,\n        '-2': false,\n        '-1': false,\n        '0': false,\n        '1': false,\n        '2': false,\n        '3': false\n      },\n      R: {\n        '1': false,\n        '2': false,\n        '3': false\n      },\n      Y: '',\n      formErrors: {\n        paramX: '',\n        paramR: '',\n        paramY: '',\n        all: ''\n      },\n      paramXValid: false,\n      paramRValid: false,\n      paramYValid: false\n    };\n  }\n  validateField(fieldName, value) {\n    this.props.setAnswer('');\n    let fieldValidationErrors = this.state.formErrors;\n    let paramXValid = this.state.paramXValid;\n    let paramYValid = this.state.paramYValid;\n    let paramRValid = this.state.paramRValid;\n    switch (fieldName) {\n      case 'paramX':\n        paramXValid = value !== '';\n        fieldValidationErrors.paramX = paramXValid ? '' : 'Выберите X';\n        break;\n      case 'paramR':\n        paramRValid = value !== '';\n        fieldValidationErrors.paramR = paramRValid ? '' : 'Выберите R';\n        break;\n      case 'paramY':\n        paramYValid = value !== '';\n        fieldValidationErrors.paramY = paramYValid ? '' : 'Введите Y';\n        if (!paramYValid) break;\n        paramYValid = !(isNaN(value) && value || !isNaN(value) && (Number(value) < -3 || Number(value) > 5));\n        fieldValidationErrors.paramY = paramYValid ? '' : 'от -3 до 5';\n        break;\n      default:\n        break;\n    }\n    this.setState({\n      formErrors: fieldValidationErrors,\n      paramXValid: paramXValid,\n      paramYValid: paramYValid,\n      paramRValid: paramRValid\n    }, this.validateForm);\n  }\n  validateForm() {\n    this.setState({\n      formValid: this.state.paramXValid && this.state.paramYValid && this.state.paramRValid\n    });\n  }\n  render() {\n    const sortedXKeys = Object.keys(this.state.X).sort((a, b) => parseFloat(a) - parseFloat(b));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container2\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.paramsIsReady,\n        className: \"forma\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p1\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 X: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"X\",\n          children: sortedXKeys.map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chooseX\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `X-checkbox-${value}`,\n              value: value,\n              checked: this.state.X[value],\n              onChange: () => this.handleCheckboxChange(value, 'X')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `X-checkbox-${value}`,\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this)]\n          }, `X-${value}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p2\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 Y: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputY\",\n          type: \"text\",\n          value: this.state.Y,\n          onChange: this.handleYChange,\n          placeholder: \"Enter Y value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p3\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 R: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"R\",\n          children: Object.keys(this.state.R).map(value => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chooseR\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `R-checkbox-${value}`,\n              value: value,\n              checked: this.state.R[value],\n              onChange: () => this.handleCheckboxChange(value, 'R')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `R-checkbox-${value}`,\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this)]\n          }, `R-${value}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formErrors\",\n          children: /*#__PURE__*/_jsxDEV(FormErrors, {\n            formErrors: this.state.formErrors,\n            answer: this.props.app.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: 'submit',\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0412\\u0432\\u0435\\u0441\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = store => {\n  return {\n    app: store.app\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    setX: x => dispatch(setX(x)),\n    setR: r => dispatch(setR(r)),\n    setY: y => dispatch(setY(y)),\n    setAnswer: answer => dispatch(setAnswer(answer)),\n    sendPoint: point => dispatch(sendPoint(point))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseForm);","map":{"version":3,"names":["Component","connect","setAnswer","sendPoint","setR","setX","setY","FormErrors","jsxDEV","_jsxDEV","ChooseForm","constructor","props","handleCheckboxChange","value","type","updatedValues","state","Object","keys","forEach","key","setState","validateField","handleYChange","event","Y","target","paramsIsReady","e","errors","formErrors","formValid","all","preventDefault","onSubmit","X","R","selectedX","find","selectedR","undefined","x","y","r","paramX","paramR","paramY","paramXValid","paramRValid","paramYValid","fieldName","fieldValidationErrors","isNaN","Number","validateForm","render","sortedXKeys","sort","a","b","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","checked","onChange","htmlFor","placeholder","answer","app","mapStateToProps","store","mapDispatchToProps","dispatch","point"],"sources":["/Users/igorsmirnov/Downloads/lab4Web/front/src/pages/ChooseForm.jsx"],"sourcesContent":["import {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {setAnswer} from \"../actions/userAction\";\nimport {sendPoint, setR, setX, setY} from \"../actions/coordinatesAction\";\nimport \"../screen/chooseForm.css\"\nimport FormErrors from \"./FornErrors\";\nclass ChooseForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            X: {\n                '-5': false,\n                '-4': false,\n                '-3': false,\n                '-2': false,\n                '-1': false,\n                '0': false,\n                '1': false,\n                '2': false,\n                '3': false,\n            },\n            R: {\n                '1': false,\n                '2': false,\n                '3': false,\n            },\n            Y: '',\n            formErrors: {paramX: '', paramR: '', paramY: '', all: ''},\n            paramXValid: false,\n            paramRValid: false,\n            paramYValid: false,\n        };\n    }\n\n    handleCheckboxChange = (value, type) => {\n        const updatedValues = { ...this.state[type] };\n\n        Object.keys(updatedValues).forEach((key) => {\n            updatedValues[key] = key === value;\n        });\n\n        this.setState({\n            [type]: updatedValues,\n        });\n        if (type === 'X') {\n            this.props.setX(value)\n            this.validateField('paramX', value)\n        }\n        else {\n            this.props.setR(value)\n            this.validateField('paramR', value)\n        }\n    };\n\n    handleYChange = (event) => {\n        this.setState({ Y: event.target.value });\n        this.props.setY(event.target.value)\n        this.validateField('paramY', event.target.value);\n    };\n    paramsIsReady = (e) => {\n        let errors = this.state.formErrors;\n        if (!this.state.formValid) {\n            errors.all = 'Неправильно введенные поля';\n            e.preventDefault();\n        }\n        else {\n            errors.all = ''\n            this.onSubmit(e);\n        }\n    };\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { X, Y, R } = this.state;\n\n        // Find the selected X value\n        const selectedX = Object.keys(X).find((key) => X[key]);\n\n        // Find the selected R value\n        const selectedR = Object.keys(R).find((key) => R[key]);\n\n        // Ensure both X and R are selected, and Y is not empty\n        if (selectedX !== undefined && selectedR !== undefined && Y !== '') {\n            this.props.sendPoint({\n                x: selectedX,\n                y: Y,\n                r: selectedR\n            });\n        }\n    }\n    validateField(fieldName, value) {\n\n        this.props.setAnswer('');\n        let fieldValidationErrors = this.state.formErrors;\n        let paramXValid = this.state.paramXValid;\n        let paramYValid = this.state.paramYValid;\n        let paramRValid = this.state.paramRValid;\n\n        switch (fieldName) {\n            case 'paramX':\n                paramXValid = (value !== '');\n                fieldValidationErrors.paramX = paramXValid ? '' : 'Выберите X';\n                break;\n            case 'paramR':\n                paramRValid = (value !== '');\n                fieldValidationErrors.paramR = paramRValid ? '' : 'Выберите R';\n                break;\n            case 'paramY':\n                paramYValid = (value !== '');\n                fieldValidationErrors.paramY = paramYValid ? '' : 'Введите Y';\n                if (!paramYValid) break;\n                paramYValid = (!(isNaN(value) && value || !isNaN(value) && (Number(value) < -3 || Number(value) > 5)));\n                fieldValidationErrors.paramY = paramYValid ? '' : 'от -3 до 5'\n                break;\n            default:\n                break;\n        }\n\n        this.setState({\n            formErrors: fieldValidationErrors,\n            paramXValid: paramXValid,\n            paramYValid: paramYValid,\n            paramRValid: paramRValid,\n        }, this.validateForm);\n\n    }\n\n    validateForm() {\n        this.setState({\n            formValid: this.state.paramXValid &&\n                this.state.paramYValid && this.state.paramRValid\n        });\n\n    }\n\n\n    render() {\n        const sortedXKeys = Object.keys(this.state.X).sort((a, b) => parseFloat(a) - parseFloat(b));\n        return (\n            <div className=\"container2\">\n                <form onSubmit={this.paramsIsReady} className='forma'>\n                <p className=\"p1\">Выберите X: </p>\n                    <div className=\"X\">\n                {sortedXKeys.map((value) => (\n                    <div className=\"chooseX\" key={`X-${value}`}>\n                        <input\n                            type=\"checkbox\"\n                            id={`X-checkbox-${value}`}\n                            value={value}\n                            checked={this.state.X[value]}\n                            onChange={() => this.handleCheckboxChange(value, 'X')}\n                        />\n                        <label htmlFor={`X-checkbox-${value}`}>{value}</label>\n                    </div>\n                ))}\n                    </div>\n                <p className=\"p2\">Выберите Y: </p>\n                <input className=\"inputY\"\n                    type=\"text\"\n                    value={this.state.Y}\n                    onChange={this.handleYChange}\n                    placeholder=\"Enter Y value\"\n                />\n                <p className=\"p3\">Выберите R: </p>\n                    <div className=\"R\">\n                {Object.keys(this.state.R).map((value) => (\n                    <div className=\"chooseR\" key={`R-${value}`}>\n                        <input\n                            type=\"checkbox\"\n                            id={`R-checkbox-${value}`}\n                            value={value}\n                            checked={this.state.R[value]}\n                            onChange={() => this.handleCheckboxChange(value, 'R')}\n                        />\n                        <label htmlFor={`R-checkbox-${value}`}>{value}</label>\n                    </div>\n                ))}\n                    </div>\n                    <div className=\"formErrors\">\n                        <FormErrors formErrors={this.state.formErrors} answer={this.props.app.answer}/>\n                    </div>\n                <button type={'submit'} className=\"button\"><span>Ввести</span><i></i></button>\n                </form>\n            </div>\n        );\n    }\n}\n\n    const mapStateToProps = store => {\n        return {\n            app: store.app,\n        }\n    };\n\n    const mapDispatchToProps = dispatch => {\n        return {\n            setX: x => dispatch(setX(x)),\n            setR: r => dispatch(setR(r)),\n            setY: y => dispatch(setY(y)),\n            setAnswer: answer => dispatch(setAnswer(answer)),\n            sendPoint: point => dispatch(sendPoint(point))\n        }\n    };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseForm);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}